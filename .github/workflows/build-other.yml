name: Build Docker images, each OS image, seed OS images
on:
  push:
    branches: [ main ]

    paths:
      - 'buildx/other/**'
      - '.github/workflows/build-other.yml'
      - 'stage*/**'

  pull_request:
    types: [opened, synchronize, reopened]

env:
  ROOTPWD: ${{ secrets.ROOTPWD }}

jobs:

  docker-other:
    permissions:
      packages: write
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'      

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}        

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push chrony
        uses: docker/build-push-action@v4
        with:
          context: buildx/other/gpsd-chrony
          file: buildx/other/gpsd-chrony/Dockerfile
          cache-from: type=gha
          cache-to: type=gha
          platforms: linux/arm/v6,linux/amd64
          push: true
          tags: ghcr.io/barneyman/gpsd-chrony-ntp
          labels: |
            latest
            unstable

      # - name: Build and push sql - amd64
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: buildx/other/mysql
      #     file: buildx/other/mysql/Dockerfile
      #     cache-from: type=gha
      #     cache-to: type=gha
      #     platforms: linux/amd64
      #     push: true
      #     tags: ghcr.io/barneyman/mysql-amd64
      #     labels: |
      #       latest
      #       unstable
      #     build-args: |
      #       ROOTPWD=${{ env.ROOTPWD }}
      #       BUILDFROM=mysql

      # - name: Build and push sql - arm64
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: buildx/other/mysql
      #     file: buildx/other/mysql/Dockerfile
      #     cache-from: type=gha
      #     cache-to: type=gha
      #     platforms: linux/arm/v8
      #     push: true
      #     tags: ghcr.io/barneyman/mysql-arm64
      #     labels: |
      #       latest
      #       unstable
      #     build-args: |
      #       ROOTPWD=${{ env.ROOTPWD }}
      #       BUILDFROM=arm64v8/mysql

      - name: Build and push sql
        uses: docker/build-push-action@v4
        with:
          context: buildx/other/mysql
          file: buildx/other/mysql/Dockerfile
          cache-from: type=gha
          cache-to: type=gha
          platforms: linux/amd64
          push: true
          tags: ghcr.io/barneyman/mysql-amd64
          labels: |
            latest
            unstable
          build-args: |
            ROOTPWD=${{ env.ROOTPWD }}
            BUILDFROM=mysql



      - name: Build and push rtsp
        uses: docker/build-push-action@v4
        with:
          context: buildx/other/rtsp-simple-server
          file: buildx/other/rtsp-simple-server/Dockerfile
          cache-from: type=gha
          cache-to: type=gha
          platforms: linux/arm/v7
          push: true
          tags: ghcr.io/barneyman/rtsp
          labels: |
            latest
            unstable

      # need dregsy 
      # need hostapd/dnsmasq

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}        

      - uses: usimd/pi-gen-action@v1
        id: pibuild
        with:
          compression: xz
          compression-level: 9
          enable-noobs: false
          export-last-stage-only: true
        # Host name of the image.
          hostname: dashcam
          # Final image name.
          image-name: 'dashcam-${{ github.run_number }}'

          # Default keyboard keymap.
          keyboard-keymap: us

          # Default keyboard layout.
          keyboard-layout: English (US)

          # Default locale of the system image.
          locale: en_AU.UTF-8

          # Password of the intial user account, locked if empty.
          password: '!raspberry'

          verbose-output: true

          # Release version of pi-gen to use. This can both be a branch or tag name known in 
          # the pi-gen repository.
          pi-gen-version: arm64

          # List of stage name to execute in given order. Relative and absolute paths to 
          # custom stage directories are allowed here. Note that by default pi-gen exports 
          # images in stage2 (lite), stage4 and stage5. You probably want to hook in custom 
          # stages before one of the exported stages. Otherwise, the action will make sure 
          # any custom stage will include an image export directive.
          stage-list: stage0 stage1 stage2 ./stage-docker-chrony

          # Use qcow2 images to reduce space and runtime requirements. _WARNING_: this is 
          # broken on recent versions of `pi-gen` and destined to be removed entirely (see 
          # https://github.com/RPi-Distro/pi-gen/pull/648).
          use-qcow2: 0

          # Name of the initial user account.
          username: pi

          # Wifi country code of default network to connect to.
          wpa-country: 'AU'

          disable-first-boot-user-rename: 1
    
      - uses: actions/upload-artifact@v3
        with:
          name: pi-gen-image-${{ github.run_number }}
          path: ${{ steps.pibuild.outputs.image-path }}
          retention-days: 3
            